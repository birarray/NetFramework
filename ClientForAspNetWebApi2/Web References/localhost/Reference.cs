//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ClientForAspNetWebApi2.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateBaseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAllDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = "https://localhost:44345/WebService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateBaseXMLCompletedEventHandler CreateBaseXMLCompleted;
        
        /// <remarks/>
        public event ReadAllDataCompletedEventHandler ReadAllDataCompleted;
        
        /// <remarks/>
        public event DeleteDataCompletedEventHandler DeleteDataCompleted;
        
        /// <remarks/>
        public event AddDataCompletedEventHandler AddDataCompleted;
        
        /// <remarks/>
        public event EditDataCompletedEventHandler EditDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateBaseXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateBaseXML() {
            this.Invoke("CreateBaseXML", new object[0]);
        }
        
        /// <remarks/>
        public void CreateBaseXMLAsync() {
            this.CreateBaseXMLAsync(null);
        }
        
        /// <remarks/>
        public void CreateBaseXMLAsync(object userState) {
            if ((this.CreateBaseXMLOperationCompleted == null)) {
                this.CreateBaseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBaseXMLOperationCompleted);
            }
            this.InvokeAsync("CreateBaseXML", new object[0], this.CreateBaseXMLOperationCompleted, userState);
        }
        
        private void OnCreateBaseXMLOperationCompleted(object arg) {
            if ((this.CreateBaseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBaseXMLCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadAllData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReadAllData(string constraint) {
            object[] results = this.Invoke("ReadAllData", new object[] {
                        constraint});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAllDataAsync(string constraint) {
            this.ReadAllDataAsync(constraint, null);
        }
        
        /// <remarks/>
        public void ReadAllDataAsync(string constraint, object userState) {
            if ((this.ReadAllDataOperationCompleted == null)) {
                this.ReadAllDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAllDataOperationCompleted);
            }
            this.InvokeAsync("ReadAllData", new object[] {
                        constraint}, this.ReadAllDataOperationCompleted, userState);
        }
        
        private void OnReadAllDataOperationCompleted(object arg) {
            if ((this.ReadAllDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAllDataCompleted(this, new ReadAllDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteData(string Id) {
            object[] results = this.Invoke("DeleteData", new object[] {
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDataAsync(string Id) {
            this.DeleteDataAsync(Id, null);
        }
        
        /// <remarks/>
        public void DeleteDataAsync(string Id, object userState) {
            if ((this.DeleteDataOperationCompleted == null)) {
                this.DeleteDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDataOperationCompleted);
            }
            this.InvokeAsync("DeleteData", new object[] {
                        Id}, this.DeleteDataOperationCompleted, userState);
        }
        
        private void OnDeleteDataOperationCompleted(object arg) {
            if ((this.DeleteDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDataCompleted(this, new DeleteDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddData(string Model, int Produced) {
            object[] results = this.Invoke("AddData", new object[] {
                        Model,
                        Produced});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDataAsync(string Model, int Produced) {
            this.AddDataAsync(Model, Produced, null);
        }
        
        /// <remarks/>
        public void AddDataAsync(string Model, int Produced, object userState) {
            if ((this.AddDataOperationCompleted == null)) {
                this.AddDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDataOperationCompleted);
            }
            this.InvokeAsync("AddData", new object[] {
                        Model,
                        Produced}, this.AddDataOperationCompleted, userState);
        }
        
        private void OnAddDataOperationCompleted(object arg) {
            if ((this.AddDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDataCompleted(this, new AddDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EditData(string id, string Model, int Produced) {
            object[] results = this.Invoke("EditData", new object[] {
                        id,
                        Model,
                        Produced});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditDataAsync(string id, string Model, int Produced) {
            this.EditDataAsync(id, Model, Produced, null);
        }
        
        /// <remarks/>
        public void EditDataAsync(string id, string Model, int Produced, object userState) {
            if ((this.EditDataOperationCompleted == null)) {
                this.EditDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDataOperationCompleted);
            }
            this.InvokeAsync("EditData", new object[] {
                        id,
                        Model,
                        Produced}, this.EditDataOperationCompleted, userState);
        }
        
        private void OnEditDataOperationCompleted(object arg) {
            if ((this.EditDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDataCompleted(this, new EditDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateBaseXMLCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ReadAllDataCompletedEventHandler(object sender, ReadAllDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAllDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAllDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDataCompletedEventHandler(object sender, DeleteDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDataCompletedEventHandler(object sender, AddDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditDataCompletedEventHandler(object sender, EditDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591